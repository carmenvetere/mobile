card:
  type: custom:button-card
  styles:
    card:
      - border-radius: 0px
      - padding-bottom: 15px
      - padding-left: 0px
      - margin: 0px
      - padding-top: 0px
      - height: 50px
      - width: 480px
      - background-color: var(--ha-card-background-2) 
    grid:
      - grid-template-areas: |
          "time alarm notifications temp"
      - grid-template-columns: 120px 120px 120px 120px
      - grid-template-rows: 50px
      - align-items: center
      - justify-items: start
      - column-gap: 10px
  custom_fields:
    time:
      card:
        type: custom:button-card
        entity: sensor.time
        show_icon: false
        show_label: false
        show_name: false
        show_state: true
        state_display: |
          [[[
            var timeString = states['sensor.time'].state;
            return new Date('1970-01-01T' + timeString + ':00').toLocaleTimeString([], {hour: 'numeric', minute:'2-digit'});
          ]]]       
        styles:
          card:
            - border-radius: 0px
            - align-self: center
            - justify-self: start
            - background: transparent
            - width: 120px
          state:
            - font-size: 18px
            - font-weight: bold
            - padding-left: 20px
    alarm:
      card:
        type: custom:button-card
        entity: alarm_control_panel.alarmo
        layout: icon_state
        show_icon: true
        show_label: false
        show_name: false
        show_state: true
        state_display: |
          [[[
            var state = states['alarm_control_panel.alarmo'].state;
            if (state === 'armed_away') return 'Armed';
            if (state === 'armed_home') return 'Armed';
            if (state === 'armed_vacation') return 'Armed';
            if (state === 'disarmed') return 'Disarmed';
            if (state === 'pending') return 'Pending';
            if (state === 'arming') return 'Arming';
            if (state === 'triggered') return 'ALARM!';
            return state.charAt(0).toUpperCase() + state.slice(1);
          ]]]
        styles:
          icon:
            - width: 24px
            - height: 24px
            - color: |
                [[[
                  var state = states['alarm_control_panel.alarmo'].state;
                  if (state === 'triggered') return 'red';
                  if (state === 'armed_away' || state === 'armed_home' || state === 'armed_vacation') return 'orange';
                  if (state === 'pending' || state === 'arming') return 'orange';
                  if (state === 'disarmed') return 'var(--primary-text-color)';
                  return 'var(--primary-text-color)';
                ]]]
          state:
            - font-size: 18px
            - font-weight: bold
          grid:
            - column-gap: 2px
          card:
            - border-radius: 5px
            - min-width: 120px
            - padding: 2px
            - align-self: center
            - justify-self: start
            - background: transparent
    notifications:
      card:
        type: custom:button-card
        entity: sensor.notification_alert_counter
        icon: >
          [[[
            const priority = states['sensor.notification_icon_priority'].state;
            if (priority === 'critical') return 'mdi:alert';
            if (priority === 'warning') return 'mdi:bell-alert';
            return 'mdi:bell';
          ]]]
        layout: icon_state
        show_icon: true
        show_label: false
        show_name: false
        show_state: true
        tap_action:
          action: navigate
          navigation_path: /mudroom-wall-panel-dash/notifications
        styles:
          state:
            - font-size: 16px
            - font-weight: bold
            - padding-right: 10px
          icon:
            - width: 24px
            - height: 24px
            - padding-left: 5px
            - color: >
                [[[
                  const priority = states['sensor.notification_icon_priority'].state;
                  if (priority === 'critical') return '#EA4D3D';  // Red - power outage, alarm triggered
                  if (priority === 'warning') return '#FF8C00';   // Orange - weather alerts, storm watch
                  return 'var(--primary-text-color)';             // Default when no high-priority notifications
                ]]]
          card:
            - border-radius: 5px
            - padding: 2px
            - width: 80px
            - height: 50px
            - align-self: center
            - justify-self: center
            - background: transparent
    temp:
      card:
        type: custom:button-card
        entity: sensor.bayberry_tempest_temperature
        show_icon: true
        layout: icon_state
        show_state: true
        show_label: false
        show_name: false
        state_display: |
          [[[
            var temp = states['sensor.bayberry_tempest_temperature'].state;
            return Math.round(temp) + 'Â°F';
          ]]]
        styles:
          icon:
            - width: 24px
            - height: 24px
          state:
            - font-size: 18px
            - font-weight: bold
          card:
            - align-self: center
            - justify-self: start
            - background: transparent
            - width: 120px
          grid:
            - column-gap: 2px
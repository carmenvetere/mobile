  type: custom:mushroom-chips-card
  card_mod:
    style: |
      ha-card {
        overflow: hidden !important;
        max-width: calc(100vw - 30px) !important; 
        margin-right: 10px !important;
        box-sizing: border-box !important; 
      }
      ha-card > * {
        display: flex !important;
        flex-wrap: nowrap !important;
        overflow-x: auto !important;
        overflow-y: hidden !important;
        gap: 8px !important;
      }
      ha-card > * > * {
        flex-shrink: 0 !important;
      }
      ha-card ::-webkit-scrollbar {
        height: 4px;
      }
      ha-card ::-webkit-scrollbar-track {
        background: transparent;
      }
      ha-card ::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.3);
        border-radius: 2px;
      }
      mushroom-chips,
      .chip-container,
      [class*="chip"] {
        display: flex !important;
        flex-wrap: nowrap !important;
        overflow-x: auto !important;
        overflow-y: hidden !important;
      }
      mushroom-chip,
      [class*="chip"]:not([class*="container"]) {
        flex-shrink: 0 !important;
        white-space: nowrap !important;
      }
  chips:
#Alarm Chip
    - type: template
      icon: mdi:shield-home
      content: |-
        {{ states('alarm_control_panel.alarmo')
             | replace('_', ' ')
             | title }}
      entity: alarm_control_panel.alarmo
      tap_action:
        action: more-info
      icon_color: >-
        {% if states('alarm_control_panel.alarmo') ==
        'disarmed' %}
          green
        {% elif states('alarm_control_panel.alarmo') ==
        'armed_home' %}
          orange
        {% elif states('alarm_control_panel.alarmo') ==
        'armed_away' %}
          red
        {% else %}
          gray
        {% endif %}
      card_mod:
        style: |
          :host {
            zoom: 1.25 !important;
            --chip-background: var(--ha-card-background-2);
          }
          @media (min-width: 768px) {
            :host {
              zoom: 1.75 !important;
            }
          }
#Notifications Chip
    - type: conditional
      conditions:
        - condition: numeric_state
          entity: sensor.notification_alert_counter
          above: 0
      chip:
        type: template
        icon: >
            [[[
              const priority = states['sensor.notification_icon_priority'].state;
              if (priority === 'critical') return 'mdi:alert';
              if (priority === 'warning') return 'mdi:bell-alert';
              return 'mdi:bell';
            ]]]
        content: "{{ states('sensor.notification_alert_counter') }}"
        entity: sensor.notification_alert_counter
        tap_action:
          action: navigate
          navigation_path: '#notifications-chip'
          # browser_mod:
          #   service: browser_mod.popup
          #   data:
          #     dismissable: true
          #     size: classic
          #     title: Notifications
          #     icon: >-
          #       {% set priority = states('sensor.notification_icon_priority') %}
          #       {% if priority in ['critical', 'warning'] %}
          #         mdi:alert
          #       {% else %}
          #         mdi:bell
          #       {% endif %}
          #     style: |
          #       --popup-max-width: 90vw;
          #       --popup-max-height: 90vh;
          #       --popup-border-radius: 15px;
          #       --popup-background-color: var(--ha-card-background-2);
          #       --mdc-dialog-box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
          #     card_mod:
          #       style: |
          #         ha-dialog {
          #           --mdc-dialog-container-color: var(--ha-card-background-2) !important;
          #           --mdc-dialog-heading-ink-color: var(--primary-text-color) !important;
          #           border-radius: 15px !important;
          #           background: var(--ha-card-background-2) !important;
          #         }
          #         ha-dialog .mdc-dialog__surface {
          #           border-radius: 15px !important;
          #           max-width: 90vw !important;
          #           max-height: 90vh !important;
          #           background: var(--ha-card-background-2) !important;
          #         }
          #         ha-dialog .mdc-dialog__content {
          #           padding: 0px !important;
          #           background: var(--ha-card-background-2) !important;                    
          #         }
          #         ha-dialog .mdc-dialog__title {
          #           font-weight: bold !important;
          #           font-size: 1.2em !important;
          #         }
          #     content:
          #       type: vertical-stack
          #       card_mod:
          #         style: |
          #           ha-card {
          #             background: var(--ha-card-background-2);
          #             border-radius: 15px;
          #             padding-right: 10px;
          #           }
          #       cards: !include notifications.yaml
        icon_color: >
                  [[[
                    const priority = states['sensor.notification_icon_priority'].state;
                    if (priority === 'critical') return '#EA4D3D';  // Red - power outage, alarm triggered
                    if (priority === 'warning') return '#FF8C00';   // Orange - weather alerts, storm watch
                    return 'var(--primary-text-color)';             // Default when no high-priority notifications
                  ]]]
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            }
#Notifications Pop-up
    - type: vertical-stack
      cards:
        - type: custom:bubble-card
          card_type: pop-up
          name: Notifications
          icon: mdi:bell-alert
          hash: "#notifications-chip"
          button_type: name
          show_header: false  
          styles: |
            .bubble-name {
              font-size: 16px !important;
                }
            .bubble-button-card-container {
              margin: 2px 10px 2px 10px !important;
              background-color: var(--ha-card-background-2) !important;
              }
        - type: custom:bubble-card
          card_type: separator
          name: Notifications
          icon: mdi:bell-alert
          styles: |
            .bubble-name {
              font-size: 16px !important;
                }
            .bubble-button-card-container {
              margin: 2px 10px 2px 10px !important;
              background-color: var(--ha-card-background-2) !important;
              }
        - type: vertical-stack
          cards: !include /config/dashboards/modules/notifications.yaml             
#Powerwall Discharge Time if Grid Down
    - type: conditional
      conditions:
        - condition: state
          entity: binary_sensor.bayberry_grid_status
          state: 'off'
      chip:
        type: entity
        entity: sensor.powerwall_discharge_time
        icon: mdi:lightning-bolt-outline
        icon_color: green
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#Powerwall Charge Level if Grid Down
    - type: conditional
      conditions:
        - condition: state
          entity: binary_sensor.bayberry_grid_status
          state: 'off'
      chip:
        type: template
        icon: mdi:home-battery
        entity: sensor.bayberry_charge
        tap_action:
          action: more-info
        icon_color: red
        content: states('sensor.bayberry_charge') + '% Charged'
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#Dinner Party Mode
    - type: conditional
      conditions:
        - condition: state
          entity: input_boolean.dinner_party
          state: 'on'
      chip:
        type: entity
        entity: input_boolean.dinner_party
        icon: mdi:glass-cocktail
        icon_color: '#7695C4'
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#Guest Mode
    - type: conditional
      conditions:
        - condition: state
          entity: input_boolean.guest_mode
          state: 'on'
      chip:
        type: entity
        entity: input_boolean.guest_mode
        icon: mdi:bed
        icon_color: '#7695C4'
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#Away Mode
    - type: conditional
      conditions:
        - condition: state
          entity: input_boolean.away_mode
          state: 'on'
      chip:
        type: entity
        entity: input_boolean.away_mode
        icon: mdi:bag-suitcase
        icon_color: '#7695C4'
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#Pool Cover Status
    - type: conditional
      conditions:
        - condition: state
          entity: binary_sensor.pool_cover
          state: 'on'
      chip:
        type: template
        entity: binary_sensor.pool_cover
        content: Pool Open!
        icon: mdi:alert-circle-outline
        icon_color: amber
        tap_action:
          action: more-info
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#Washer Time Remaining
    - type: conditional
      conditions:
        - condition: state
          entity: sensor.front_load_washer
          state: 'on'
      chip:
        type: entity
        entity: sensor.front_load_washer_remaining_time
        icon: mdi:washing-machine
        icon_color: light-blue
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#Dryer Time Remaining
    - type: conditional
      conditions:
        - condition: state
          entity: sensor.dryer
          state: 'on'
      chip:
        type: entity
        entity: sensor.dryer_remaining_time
        icon: mdi:tumble-dryer
        icon_color: amber
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#Pool Water Temperature
    - type: conditional
      conditions:
        - condition: state
          entity: sensor.omnilogic_pool_watersensor
          state_not: unknown
        - condition: state
          entity: sensor.omnilogic_pool_watersensor
          state_not: unavailable
      chip:
        type: entity
        entity: sensor.omnilogic_pool_watersensor
        tap_action:
          action: more-info
        icon: mdi:pool-thermometer
        icon_color: cyan
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#BMW Charge End Time
    - type: conditional
      conditions:
        - condition: state
          entity: binary_sensor.i4_xdrive40_charging_status
          state: "on"
      chip:
        type: template
        icon: mdi:ev-plug-type2
        entity: sensor.i4_xdrive40_charging_end_time
        icon_color: green
        content: >
          {{ as_timestamp(states('sensor.i4_xdrive40_charging_end_time')) | timestamp_custom('%-I:%M %p') }}
        tap_action:
          action: more-info
          entity: sensor.i4_xdrive40_remaining_battery_percent
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#Rivian Charge End Time
    - type: conditional
      conditions:
        - condition: state
          entity: binary_sensor.r1t_charging_status
          state: "on"
      chip:
        type: template
        icon: mdi:ev-plug-type2
        entity: sensor.r1t_charging_time_remaining
        icon_color: green
        content: >
          {{ (now() + timedelta(minutes=states('sensor.r1t_charging_time_remaining')|int(0))).timestamp() | timestamp_custom('%-I:%M %p') }}
        tap_action:
          action: more-info
          entity: sensor.r1t_battery_state_of_charge
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#Vehicle Charging
    - type: conditional
      conditions:
        - condition: state
          entity: sensor.tesla_wall_connector_status
          state: "charging"
        - condition: state
          entity: sensor.tesla_wall_connector_status
          state: "charging_reduced"
      chip:
        type: template
        content: Charging
        entity: sensor.tesla_wall_connector_status
        tap_action:
          action: more-info
        icon: mdi:ev-plug-tesla
        icon_color: green
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            } 
#Fresh Air Ventilation
    - type: conditional
      conditions:
        - condition: state
          entity: switch.utility_room_ventilation_damper
          state: 'on'
      chip:
        type: template
        content: Fresh Air
        entity: switch.utility_room_ventilation_damper
        tap_action:
          action: more-info
        icon: mdi:tailwind
        icon_color: blue
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2);
            }        
#Aux Heat Active
    - type: conditional
      conditions:
        - condition: template
          value_template: >
            {{
            states('switch.office_thermostat_office_emergency_heat')
            == 'on' or
                states('switch.basement_thermostat_basement_emergency_heat') == 'on' or
                states('switch.living_room_thermostat_living_room_emergency_heat') == 'on' or
                states('switch.master_bedroom_thermostat_master_bedroom_emergency_heat') == 'on' }}
      chip:
        type: template
        icon: mdi:fire
        content: Aux Heat
        tap_action:
          action: more-info
        icon_color: red
        card_mod:
          style: |
            :host {
              zoom: 1.25 !important;
              --chip-background: var(--ha-card-background-2)
            } 